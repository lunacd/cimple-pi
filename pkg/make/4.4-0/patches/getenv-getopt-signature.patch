GCC-15 complains about missing parameters, this gets found
out when using non-glibc ( e.g. musl ) C library

Fixes
lib/fnmatch.c:124:14: error: conflicting types for 'getenv'; have 'char *(void)'
|   124 | extern char *getenv ();
|       |              ^~~~~~

Patch partly taken from https://lists.gnu.org/archive/html/bug-make/2025-03/msg00033.html
--- a/lib/fnmatch.c
+++ b/lib/fnmatch.c
@@ -121,7 +121,7 @@ USA.  */
    whose names are inconsistent.  */

 # if !defined _LIBC && !defined getenv
-extern char *getenv ();
+extern char *getenv (const char *);
 # endif

 # ifndef errno
--- a/lib/glob.c
+++ b/lib/glob.c
@@ -136,7 +136,7 @@ extern int errno;
 # define	ANSI_STRING
 #else	/* No standard headers.  */

-extern char *getenv ();
+extern char *getenv (const char *);

 # ifdef HAVE_STRING_H
 #  include <string.h>
--- a/src/getopt.c
+++ b/src/getopt.c
@@ -202,7 +202,7 @@ static char *posixly_correct;
    whose names are inconsistent.  */

 #ifndef getenv
-extern char *getenv ();
+extern char *getenv (const char *);
 #endif

 static char *
--- a/src/getopt.h
+++ b/src/getopt.h
@@ -102,7 +102,7 @@ struct option
    errors, only prototype getopt for the GNU C library.  */
 extern int getopt (int argc, char *const *argv, const char *shortopts);
 #else /* not __GNU_LIBRARY__ */
-extern int getopt ();
+extern int getopt (int,  char * const*, const char *);
 #endif /* __GNU_LIBRARY__ */
 extern int getopt_long (int argc, char *const *argv, const char *shortopts,
 		        const struct option *longopts, int *longind);
